<Window x:Class="TradeOffSlider.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:TradeOffSlider.Views"
        xmlns:vm="clr-namespace:TradeOffSlider.ViewModels"
        xmlns:m="clr-namespace:TradeOffSlider.Models"
        Title="MainWindow" Height="350" Width="525">

    <Window.Resources>
        <l:VisibilityAndBooleanConverter x:Key="VisibilityAndBooleanConverter" ConvertBackDefaultBooleanValue="False" ConvertBackWhenVisible="True" 
                                         ConvertWhenFalse="Hidden" ConvertWhenTrue="Visible"/>
        <l:VisibilityAndBooleanConverter x:Key="ReverseVisibilityAndBooleanConverter" ConvertBackDefaultBooleanValue="True" ConvertBackWhenVisible="False" 
                                         ConvertWhenFalse="Visible" ConvertWhenTrue="Hidden"/>
        <Thickness x:Key="TradeItemNameMargin">20,0,0,0</Thickness>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Button Grid.RowSpan="3" Click="Button_Click">
            <Button.Template>
                <ControlTemplate>
                    <Rectangle Fill="#FFD6D2FB"/>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="＋" HorizontalAlignment="Left" Margin="20,10,0,10" VerticalAlignment="Top" Width="40" Command="{Binding AddCommand, Mode=OneWay}"/>
        <Button Name="CaptureButton" HorizontalAlignment="Right" Margin="0,10,20,10" VerticalAlignment="Top" Width="40" Click="CaptureButton_Click">
            <Grid>
                <Rectangle Width="25" Height="15" Margin="5,5,5,0" Fill="Black" />
                <Rectangle Width="15" Height="15" Margin="5,0,5,5" Fill="Black" />
                <Ellipse Margin="5,5,5,5" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="10"/>
            </Grid>
        </Button>
        <Border Grid.Row="1" HorizontalAlignment="Stretch" Height="2" Margin="5" Background="LightGray" />
        <Grid Name="Split" Grid.Row="1" Margin="5,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Rectangle Name="NameColumnWidth" Grid.Column="0" Fill="AliceBlue" Margin="{DynamicResource TradeItemNameMargin}"/>
            <GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Center"  VerticalAlignment="Stretch" Background="LightGray"/>
            <Rectangle Name="SliderColumnWidth" Grid.Column="2" Fill="Chocolate" Margin="10,0,0,0"/>
            <Rectangle Name="ValueColmnWidth" Grid.Column="3" Width="40" Margin="0,0,10,0" Fill="BlueViolet"/>
        </Grid>
        <Grid Name="CaptureRootPanel" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Margin="{DynamicResource TradeItemNameMargin}" Background="#FFE1FDD8" HorizontalAlignment="Left" Width="{Binding ActualWidth, ElementName=NameColumnWidth, Mode=OneWay}" />
                <Grid Grid.Column="1" Margin="10,5,0,5" Height="25" HorizontalAlignment="Left" Width="{Binding ActualWidth, ElementName=SliderColumnWidth, Mode=OneWay}">
                    <Rectangle >
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="1,1">
                                <GradientStop Color="#FF81FF39" Offset="0"/>
                                <GradientStop Color="#FFFF2F00" Offset="1"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="Max" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                    <TextBlock Text="Min" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0"/>
                </Grid>
                <Grid Grid.Column="2" Margin="0,0,10,0" Width="{Binding ActualWidth, ElementName=ValueColmnWidth, Mode=OneWay}"/>
            </Grid>
            <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1">
                <ItemsControl Grid.Row="1" ItemsSource="{Binding TradeItems}" >
                    <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type vm:TradeItemViewModel}">
                            <Grid Margin="0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                        Command="{Binding DataContext.RemoveItemCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type v:MainWindow}}}" CommandParameter="{Binding}" >
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup>
                                                        <VisualState Name="Normal"/>
                                                        <VisualState Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="RemoveBackGround" 
                                                                                 Storyboard.TargetProperty="Opacity" To="0.6" Duration="0:0:0.5" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState Name="Pressed">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="RemoveBackGround" 
                                                                                Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" 
                                                                                To="#FFC7C7C7" Duration="0:0:0.1" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState Name="Focused">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="RemoveBackGround" 
                                                                                Storyboard.TargetProperty="(Rectangle.Stroke).(SolidColorBrush.Color)" 
                                                                                To="#FF6570DA" Duration="0:0:0.1" />
                                                                <DoubleAnimation Storyboard.TargetName="RemoveBackGround" 
                                                                                 Storyboard.TargetProperty="StrokeThickness" 
                                                                                 To="2" Duration="0:0:0.1"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle Name="RemoveBackGround" Fill="#FF8B8B8B" Stroke="#FFCBBDBD" />
                                                <Rectangle Width="8" Height="2" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="White" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Grid Grid.Column="0" Width="{Binding ActualWidth, ElementName=NameColumnWidth, Mode=OneWay}" HorizontalAlignment="Left" Margin="20,0,0,0" >
                                    <TextBox Text="{Binding Name}" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                             Visibility="{Binding NameEditMode, Converter={StaticResource VisibilityAndBooleanConverter}}" IsVisibleChanged="TextBox_IsVisibleChanged" IsManipulationEnabled="True" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="LeaveNameEditMode" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <ContentControl>
                                        <TextBlock Text="{Binding Name}" HorizontalAlignment="Right" VerticalAlignment="Center"
                                            Visibility="{Binding NameEditMode, Converter={StaticResource ReverseVisibilityAndBooleanConverter}}"/>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="EnterNameEditMode" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ContentControl>
                                </Grid>
                                <Slider Grid.Column="1" Maximum="100" Minimum="0" HorizontalAlignment="Right" FlowDirection="RightToLeft" 
                                        Width="{Binding ActualWidth, ElementName=SliderColumnWidth, Mode=OneWay}" Margin="10,0,0,0" 
                                        SmallChange="1" LargeChange="10" TickFrequency="10" TickPlacement="TopLeft" Value="{Binding Value, Mode=TwoWay}" />
                                <TextBlock Grid.Column="2" Text="{Binding Value}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>
            </ScrollViewer>
        </Grid>

    </Grid>
</Window>
